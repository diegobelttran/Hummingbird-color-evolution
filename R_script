### Script to run ES-sim with color evolution rates obtained from BAMM and speciation rates from the log of Equal-splits

# we used the ES-sim script from Harvey, MG and Rabosky, DL. 2018. 
#Continuous traits and speciation rates: Alternatives to state-dependent diversification models. 
#Methods in Ecology and Evolution 9: 984-993.
#https://github.com/mgharvey/ES-sim


# first we load the ES-sim function
essim <- function(phy, trait, nsim = 1000, is) {

	require(ape)

	require(mvtnorm)

	if(missing(is)) { # If inverse equal splits statistics not provided, calculate it
		rootnode <- length(phy$tip.label) + 1
		is <- numeric(length(phy$tip.label))
		for (i in 1:length(is)){

			node <- i
			index <- 1
			qx <- 0
			while (node != rootnode){

				el <- phy$edge.length[phy$edge[,2] == node]
				node <- phy$edge[,1][phy$edge[,2] == node]			
				qx <- qx + el* (1 / 2^(index-1))			
				index <- index + 1
			}
			is[i] <- 1/qx
		}		
	names(is) <- phy$tip.label
	}

	is <- log(is[phy$tip.label]) # log transform
	trait <- trait[phy$tip.label]

	# Pearson's correlation between splits statistic and trait

	res <- cor.test(is, trait, method="pearson")

	# Fit Brownian motion model to get diffusion rate and root state estimates

	vv <- vcv.phylo(as.phylo(phy))
	onev <- matrix(rep(1, length(trait)), nrow=length(trait), ncol=1)
	root <- as.vector(solve(t(onev)%*% solve(vv) %*% onev) %*% (t(onev)%*% solve(vv) %*% trait))
	rate <- as.vector((t(trait-root) %*% solve(vv) %*% (trait-root))/length(trait))

	# Brownian simulations 

	sims <- t(rmvnorm(nsim, sigma=rate*vv))

	rownames(sims) <- rownames(vv)

	# Pearson's correlations of simulated datasets

	sim.r <- sapply(1:nsim, function(x) cor.test(is[as.vector(rownames(sims))], sims[,x], method="pearson")$estimate)

	# Calculate the two-tailed p value

	corr <- res$estimate

	upper <- (length(sim.r[sim.r >= corr])+1)/(nsim+1)

	lower <- (length(sim.r[sim.r <= corr])+1)/(nsim+1)

	pval <- 2*min(c(upper,lower)) # Remove "2" for one-tailed


	result <- as.vector(c(corr, pval))

	names(result) <- c("rho", "P Value")

	return(result)

}


#although that data is already in the 'rates_dataset.txt' file, to get the log of equal-splits from trait data we ran the
#above script without the loop where the object phy is the phylogeny, like so

phy <- read.tree("treeU.tre")
require(ape)

require(mvtnorm)

	if(missing(is)) { # If inverse equal splits statistics not provided, calculate it
		rootnode <- length(phy$tip.label) + 1
		is <- numeric(length(phy$tip.label))
		for (i in 1:length(is)){

			node <- i
			index <- 1
			qx <- 0
			while (node != rootnode){

				el <- phy$edge.length[phy$edge[,2] == node]
				node <- phy$edge[,1][phy$edge[,2] == node]			
				qx <- qx + el* (1 / 2^(index-1))			
				index <- index + 1
			}
			is[i] <- 1/qx
		}		
	names(is) <- phy$tip.label
	}

	is <- log(is[phy$tip.label]) # log transform

#the object 'is' is now a vector containing the log of equal splits, whose length is the same as the number of
#branches in the phylogeny

# To actually run ES-sim, 'phy' is your phylogeny and 'trait' is a vector containing your trait information 
#(with names that match the names on the tips of the phylogeny), and 'nsim' is the number of simulations used to build 
#the null distribution of trait-speciation associations for significance testing (p-value)

library(ape)
library(mvtnorm)

#####Brightness - Male sexual selection patches, for example
phy <- read.tree("treeU.tre")
trait <- Bri_Beta_males_SS
names(trait) <- rownames(rates_dataset)

#run ES-sim function and get a correlation coefficient between trait evolution and speciation rate and a p-value
essim(phy, trait, nsim = 1000)

#to observe a histogram of the null distribution and where your correlation coefficient lies simply use the 'sim.r' object
hist(sim.r,xlim=c(-1,1),col='gray',ylab='Frequency',xlab='Correlation coefficient distribution',main='Male brightness sexual selection patches',
cex.lab=1.4,cex.axis=1.4,cex.main=1.4)
abline(v=pval,col='red',lwd=2,lty=2)
abline(v=-pval,col='red',lwd=2,lty=2)
abline(v=corr,col='blue',lwd=2.3)


